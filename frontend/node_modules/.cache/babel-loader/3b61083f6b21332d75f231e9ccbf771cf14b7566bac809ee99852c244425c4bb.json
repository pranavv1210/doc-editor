{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pranav\\\\Desktop\\\\document-editor\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Quill from 'quill';\nimport 'quill/dist/quill.snow.css'; // Import Quill's CSS\nimport './index.css'; // Your Tailwind CSS imports are here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const quillViewerRef = useRef(null); // Ref for the read-only Quill viewer (Column 1)\n  const quillInstanceRef = useRef(null); // To store Quill instance\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quillContentDelta, setQuillContentDelta] = useState([]); // Raw Quill delta from original doc\n  const [extractedData, setExtractedData] = useState({}); // Read-only AI-extracted data\n  const [editableData, setEditableData] = useState({}); // Editable AI-extracted data\n  const [parsedDataOrder, setParsedDataOrder] = useState([]); // Order of fields from AI\n  const [rawDocumentText, setRawDocumentText] = useState(\"\"); // Raw text for Label Studio export\n  const [labelStudioProjects, setLabelStudioProjects] = useState([]);\n  const [labelStudioStatus, setLabelStudioStatus] = useState(null);\n  const [projectIdToImport, setProjectIdToImport] = useState('');\n  const [showProjectModal, setShowProjectModal] = useState(false);\n  const [projectTypeForLS, setProjectTypeForLS] = useState('generic'); // 'generic', 'resume', 'skills', 'education'\n  const [message, setMessage] = useState('');\n\n  // Initialize Quill viewer for Column 1\n  useEffect(() => {\n    if (quillViewerRef.current) {\n      if (!quillInstanceRef.current) {\n        quillInstanceRef.current = new Quill(quillViewerRef.current, {\n          theme: 'snow',\n          readOnly: true,\n          // Make it read-only\n          modules: {\n            toolbar: false // No toolbar for viewer\n          }\n        });\n        quillInstanceRef.current.disable(); // Ensure it's not editable\n      }\n      quillInstanceRef.current.setContents(quillContentDelta);\n      // Ensure the Quill instance updates its content when quillContentDelta changes\n      const editor = quillInstanceRef.current;\n      if (editor) {\n        editor.setContents(quillContentDelta);\n      }\n    }\n  }, [quillContentDelta]);\n\n  // Function to debounce state updates (useful for frequent input changes)\n  const debounce = (func, delay) => {\n    let timeout;\n    return (...args) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func.apply(this, args), delay);\n    };\n  };\n\n  // Reconstructs Quill delta from editableData for dynamic reflection in Column 1\n  const updateQuillContentFromEditableData = useCallback(debounce(data => {\n    const newDelta = [];\n    if (data && parsedDataOrder.length > 0) {\n      // Ensure order is maintained\n      parsedDataOrder.forEach(key => {\n        const value = data[key];\n        if (value !== undefined && value !== null) {\n          // Only add if value exists\n          let displayValue = value;\n          // Attempt to pretty print JSON if it's a stringified object/array\n          try {\n            const parsed = JSON.parse(value);\n            if (typeof parsed === 'object' && parsed !== null) {\n              displayValue = JSON.stringify(parsed, null, 2);\n            }\n          } catch (e) {\n            // Not a valid JSON string, use as is\n          }\n          newDelta.push({\n            insert: `${key.replace(/_/g, ' ').toUpperCase()}:\\n`,\n            attributes: {\n              bold: true,\n              size: 'large'\n            }\n          });\n          newDelta.push({\n            insert: `${displayValue}\\n\\n`\n          });\n        }\n      });\n    } else if (data) {\n      // Fallback if no specific order is available, just iterate keys\n      Object.entries(data).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          let displayValue = value;\n          try {\n            const parsed = JSON.parse(value);\n            if (typeof parsed === 'object' && parsed !== null) {\n              displayValue = JSON.stringify(parsed, null, 2);\n            }\n          } catch (e) {}\n          newDelta.push({\n            insert: `${key.replace(/_/g, ' ').toUpperCase()}:\\n`,\n            attributes: {\n              bold: true,\n              size: 'large'\n            }\n          });\n          newDelta.push({\n            insert: `${displayValue}\\n\\n`\n          });\n        }\n      });\n    }\n    setQuillContentDelta(newDelta);\n  }, 300), [parsedDataOrder, setQuillContentDelta]); // ADDED parsedDataOrder and setQuillContentDelta to dependencies\n\n  // Effect to update Column 1 when editableData changes\n  useEffect(() => {\n    updateQuillContentFromEditableData(editableData);\n  }, [editableData, updateQuillContentFromEditableData]);\n\n  // Handle file selection\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setError(null);\n    setMessage(null);\n    setQuillContentDelta([]);\n    setExtractedData({});\n    setEditableData({});\n    setParsedDataOrder([]);\n    setRawDocumentText(\"\");\n  };\n\n  // Handle file upload and initial parsing\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a file first.');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setMessage(null);\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error || 'File upload failed');\n      }\n      const data = await response.json();\n      console.log(\"Upload response data:\", data);\n      setQuillContentDelta(data.quill_content_delta || []);\n      setExtractedData(data.parsed_data || {});\n      setEditableData(data.parsed_data || {}); // Initialize editable with extracted\n      setParsedDataOrder(data.parsed_data_order || Object.keys(data.parsed_data || {}));\n      setRawDocumentText(data.raw_text_content || \"\");\n      setMessage('File processed and data extracted successfully!');\n    } catch (err) {\n      console.error('Upload Error:', err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle changes in editable fields (Column 3)\n  const handleEditableChange = (field, value) => {\n    setEditableData(prevData => ({\n      ...prevData,\n      [field]: value\n    }));\n  };\n\n  // Handle saving the document\n  const handleSave = async () => {\n    setLoading(true);\n    setError(null);\n    setMessage(null);\n    try {\n      const response = await fetch('http://localhost:5000/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          edited_data: editableData,\n          quill_content_delta: quillContentDelta // Save the current state of the Quill view\n        })\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error || 'Save failed');\n      }\n      const data = await response.json();\n      setMessage(data.message);\n    } catch (err) {\n      console.error('Save Error:', err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle exporting to PDF\n  const handleExportPdf = async () => {\n    setLoading(true);\n    setError(null);\n    setMessage(null);\n    try {\n      const response = await fetch('http://localhost:5000/export', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          quill_content_delta: quillContentDelta // Export what's shown in Column 1\n        })\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error || 'PDF export failed');\n      }\n      const data = await response.json();\n      setMessage(data.message);\n      if (data.pdf_download_url) {\n        // Trigger client-side download\n        window.open(`http://localhost:5000${data.pdf_download_url}`, '_blank');\n      }\n    } catch (err) {\n      console.error('Export PDF Error:', err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Label Studio Integration functions\n  const fetchLabelStudioStatus = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:5000/label-studio-status');\n      const data = await response.json();\n      setLabelStudioStatus(data);\n    } catch (err) {\n      console.error(\"Failed to fetch Label Studio status:\", err);\n      setLabelStudioStatus({\n        success: false,\n        status: 'unknown_error',\n        message: \"Could not connect to backend for Label Studio status.\"\n      });\n    }\n  }, []);\n  const fetchLabelStudioProjects = useCallback(async () => {\n    if (labelStudioStatus && labelStudioStatus.success) {\n      try {\n        const response = await fetch('http://localhost:5000/label-studio-projects');\n        const data = await response.json();\n        if (data.success) {\n          setLabelStudioProjects(data.projects);\n        } else {\n          setError(`Failed to get LS projects: ${data.error}`);\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch Label Studio projects:\", err);\n        setError(\"Failed to fetch Label Studio projects.\");\n      }\n    }\n  }, [labelStudioStatus]);\n  useEffect(() => {\n    fetchLabelStudioStatus();\n  }, [fetchLabelStudioStatus]);\n  useEffect(() => {\n    if (labelStudioStatus !== null && labelStudioStatus !== void 0 && labelStudioStatus.success) {\n      fetchLabelStudioProjects();\n    }\n  }, [labelStudioStatus, fetchLabelStudioProjects]);\n  const handleExportToLabelStudio = async () => {\n    setLoading(true);\n    setError(null);\n    setMessage(null);\n    try {\n      const response = await fetch('http://localhost:5000/export-to-label-studio', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          parsed_data: editableData,\n          // Send the currently editable data\n          raw_document_text: rawDocumentText,\n          // Send original raw text for annotation\n          project_type: projectTypeForLS\n        })\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error || 'Export to Label Studio failed');\n      }\n      const data = await response.json();\n      setMessage(data.message);\n      setShowProjectModal(false); // Close modal on success\n      fetchLabelStudioProjects(); // Refresh project list\n      if (data.label_studio_url) {\n        window.open(data.label_studio_url, '_blank');\n      }\n    } catch (err) {\n      console.error('Export to LS Error:', err);\n      setError(`Error exporting to Label Studio: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleImportFromLabelStudio = async () => {\n    if (!projectIdToImport) {\n      setError('Please enter a Project ID to import.');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setMessage(null);\n    try {\n      const response = await fetch('http://localhost:5000/import-from-label-studio', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          project_id: projectIdToImport\n        })\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error || 'Import from Label Studio failed');\n      }\n      const data = await response.json();\n      setMessage(data.message + (data.insights_file ? ` (Insights file: ${data.insights_file})` : ''));\n      console.log('Annotated Data:', data.annotated_data);\n      if (data.insights_download_url) {\n        window.open(`http://localhost:5000${data.insights_download_url}`, '_blank');\n      }\n\n      // Optionally, you could update `editableData` with imported annotations\n      // This would require mapping LS annotations back to your structured data format.\n      // For now, we just log it.\n    } catch (err) {\n      console.error('Import from LS Error:', err);\n      setError(`Error importing from Label Studio: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-4 font-sans text-gray-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-center text-blue-700 mb-8 drop-shadow-md\",\n      children: \"Document Editor with AI-Powered Extraction \\uD83D\\uDCC4\\u2728\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto bg-white rounded-xl shadow-lg p-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row items-center justify-center gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          className: \"block w-full text-sm text-gray-500\\r file:mr-4 file:py-2 file:px-4\\r file:rounded-full file:border-0\\r file:text-sm file:font-semibold\\r file:bg-blue-50 file:text-blue-700\\r hover:file:bg-blue-100 cursor-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          disabled: !selectedFile || loading,\n          className: \"w-full md:w-auto px-6 py-3 bg-blue-600 text-white rounded-lg\\r hover:bg-blue-700 transition-colors duration-200\\r disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\",\n          children: loading ? 'Processing...' : 'Upload & Extract'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row items-center justify-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          disabled: loading || Object.keys(editableData).length === 0,\n          className: \"w-full md:w-auto px-6 py-3 bg-green-600 text-white rounded-lg\\r hover:bg-green-700 transition-colors duration-200\\r disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\",\n          children: \"Save Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExportPdf,\n          disabled: loading || quillContentDelta.length === 0,\n          className: \"w-full md:w-auto px-6 py-3 bg-purple-600 text-white rounded-lg\\r hover:bg-purple-700 transition-colors duration-200\\r disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\",\n          children: \"Export to PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-3 bg-red-100 text-red-700 border border-red-300 rounded-md\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-3 bg-green-100 text-green-700 border border-green-300 rounded-md\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-xl shadow-lg flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-700\",\n          children: \"Live Document View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: quillViewerRef,\n            className: \"ql-viewer\",\n            children: quillContentDelta.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 text-center py-10\",\n              children: \"Upload a document (PDF, DOCX, TXT) to see its live view here. Edits in the third column will dynamically reflect here.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-xl shadow-lg flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-700\",\n          children: \"AI-Extracted Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow space-y-4 overflow-y-auto max-h-[80vh] p-2 -m-2\",\n          children: parsedDataOrder.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-center py-10\",\n            children: \"Extracted details will appear here after document upload and processing.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this) : parsedDataOrder.map(key => extractedData[key] !== undefined && extractedData[key] !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-gray-50 rounded-md border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-bold text-blue-600 mb-1\",\n              children: [key.replace(/_/g, ' ').toUpperCase(), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700 text-sm break-words whitespace-pre-wrap\",\n              children: typeof extractedData[key] === 'object' && extractedData[key] !== null ? JSON.stringify(extractedData[key], null, 2) : String(extractedData[key])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 21\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 19\n          }, this) : null // Don't render if value is null or undefined\n          )\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-xl shadow-lg flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-700\",\n          children: \"Edit Extracted Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow space-y-4 overflow-y-auto max-h-[80vh] p-2 -m-2\",\n          children: parsedDataOrder.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-center py-10\",\n            children: \"Edit fields will appear here after AI extraction. Changes will reflect dynamically in the \\\"Live View\\\".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this) : parsedDataOrder.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `edit-${key}`,\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: [key.replace(/_/g, ' ').toUpperCase(), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: `edit-${key}`,\n              value: editableData[key] || '',\n              onChange: e => handleEditableChange(key, e.target.value),\n              rows: Math.min(5, String(editableData[key] || '').split('\\n').length + 1),\n              className: \"editable-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto bg-white rounded-xl shadow-lg p-6 mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4 text-gray-700\",\n        children: \"Label Studio Integration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mb-4\",\n        children: [\"Status: \", labelStudioStatus ? labelStudioStatus.success ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-green-600 font-medium\",\n          children: [\"Connected (\", labelStudioStatus.total_projects, \" projects)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-600 font-medium\",\n          children: [\"Disconnected (\", labelStudioStatus.status, \": \", labelStudioStatus.message, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 15\n        }, this) : 'Checking...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), !(labelStudioStatus !== null && labelStudioStatus !== void 0 && labelStudioStatus.success) && (labelStudioStatus === null || labelStudioStatus === void 0 ? void 0 : labelStudioStatus.setup_instructions) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold text-yellow-800\",\n          children: \"Label Studio Setup Required:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside text-yellow-700 text-sm\",\n          children: labelStudioStatus.setup_instructions.map((inst, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: inst\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row gap-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowProjectModal(true),\n          disabled: loading || !(labelStudioStatus !== null && labelStudioStatus !== void 0 && labelStudioStatus.success) || Object.keys(editableData).length === 0,\n          className: \"w-full md:w-auto px-6 py-3 bg-indigo-600 text-white rounded-lg\\r hover:bg-indigo-700 transition-colors duration-200\\r disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\",\n          children: \"Export to Label Studio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Project ID to import\",\n          value: projectIdToImport,\n          onChange: e => setProjectIdToImport(e.target.value),\n          className: \"editable-field flex-grow md:flex-grow-0\",\n          disabled: !(labelStudioStatus !== null && labelStudioStatus !== void 0 && labelStudioStatus.success)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleImportFromLabelStudio,\n          disabled: loading || !(labelStudioStatus !== null && labelStudioStatus !== void 0 && labelStudioStatus.success) || !projectIdToImport,\n          className: \"w-full md:w-auto px-6 py-3 bg-indigo-600 text-white rounded-lg\\r hover:bg-indigo-700 transition-colors duration-200\\r disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\",\n          children: \"Import from Label Studio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), labelStudioProjects.length > 0 && (labelStudioStatus === null || labelStudioStatus === void 0 ? void 0 : labelStudioStatus.success) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Your Label Studio Projects:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside text-gray-700\",\n          children: labelStudioProjects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-1 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 19\n            }, this), \" (ID: \", project.id, \") - Tasks: \", project.task_count, \", Annotations: \", project.annotation_count, /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `${labelStudioStatus.url}/projects/${project.id}/data`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"ml-2 text-blue-500 hover:underline\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 19\n            }, this)]\n          }, project.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }, this), showProjectModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center p-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-xl p-6 w-full max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-800\",\n          children: \"Export to Label Studio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"projectType\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Project Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"projectType\",\n            value: projectTypeForLS,\n            onChange: e => setProjectTypeForLS(e.target.value),\n            className: \"editable-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"generic\",\n              children: \"Generic Document Annotation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"resume\",\n              children: \"Resume Annotation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"skills\",\n              children: \"Skill Extraction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"education\",\n              children: \"Education Validation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowProjectModal(false),\n            className: \"px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400 transition-colors\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleExportToLabelStudio,\n            disabled: loading,\n            className: \"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors disabled:opacity-50\",\n            children: loading ? 'Exporting...' : 'Export'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1g3EN4cbv0ffQlievEorTCdq+dM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Quill","jsxDEV","_jsxDEV","App","_s","quillViewerRef","quillInstanceRef","selectedFile","setSelectedFile","loading","setLoading","error","setError","quillContentDelta","setQuillContentDelta","extractedData","setExtractedData","editableData","setEditableData","parsedDataOrder","setParsedDataOrder","rawDocumentText","setRawDocumentText","labelStudioProjects","setLabelStudioProjects","labelStudioStatus","setLabelStudioStatus","projectIdToImport","setProjectIdToImport","showProjectModal","setShowProjectModal","projectTypeForLS","setProjectTypeForLS","message","setMessage","current","theme","readOnly","modules","toolbar","disable","setContents","editor","debounce","func","delay","timeout","args","clearTimeout","setTimeout","apply","updateQuillContentFromEditableData","data","newDelta","length","forEach","key","value","undefined","displayValue","parsed","JSON","parse","stringify","e","push","insert","replace","toUpperCase","attributes","bold","size","Object","entries","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","ok","errData","json","Error","console","log","quill_content_delta","parsed_data","parsed_data_order","keys","raw_text_content","err","handleEditableChange","field","prevData","handleSave","headers","edited_data","handleExportPdf","pdf_download_url","window","open","fetchLabelStudioStatus","success","status","fetchLabelStudioProjects","projects","handleExportToLabelStudio","raw_document_text","project_type","label_studio_url","handleImportFromLabelStudio","project_id","insights_file","annotated_data","insights_download_url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","ref","map","String","htmlFor","id","rows","Math","min","split","total_projects","setup_instructions","inst","idx","placeholder","project","title","task_count","annotation_count","href","url","rel","_c","$RefreshReg$"],"sources":["C:/Users/Pranav/Desktop/document-editor/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.snow.css'; // Import Quill's CSS\r\nimport './index.css'; // Your Tailwind CSS imports are here\r\n\r\nfunction App() {\r\n  const quillViewerRef = useRef(null); // Ref for the read-only Quill viewer (Column 1)\r\n  const quillInstanceRef = useRef(null); // To store Quill instance\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [quillContentDelta, setQuillContentDelta] = useState([]); // Raw Quill delta from original doc\r\n  const [extractedData, setExtractedData] = useState({}); // Read-only AI-extracted data\r\n  const [editableData, setEditableData] = useState({}); // Editable AI-extracted data\r\n  const [parsedDataOrder, setParsedDataOrder] = useState([]); // Order of fields from AI\r\n  const [rawDocumentText, setRawDocumentText] = useState(\"\"); // Raw text for Label Studio export\r\n  const [labelStudioProjects, setLabelStudioProjects] = useState([]);\r\n  const [labelStudioStatus, setLabelStudioStatus] = useState(null);\r\n  const [projectIdToImport, setProjectIdToImport] = useState('');\r\n  const [showProjectModal, setShowProjectModal] = useState(false);\r\n  const [projectTypeForLS, setProjectTypeForLS] = useState('generic'); // 'generic', 'resume', 'skills', 'education'\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Initialize Quill viewer for Column 1\r\n  useEffect(() => {\r\n    if (quillViewerRef.current) {\r\n      if (!quillInstanceRef.current) {\r\n        quillInstanceRef.current = new Quill(quillViewerRef.current, {\r\n          theme: 'snow',\r\n          readOnly: true, // Make it read-only\r\n          modules: {\r\n            toolbar: false // No toolbar for viewer\r\n          }\r\n        });\r\n        quillInstanceRef.current.disable(); // Ensure it's not editable\r\n      }\r\n      quillInstanceRef.current.setContents(quillContentDelta);\r\n      // Ensure the Quill instance updates its content when quillContentDelta changes\r\n      const editor = quillInstanceRef.current;\r\n      if (editor) {\r\n          editor.setContents(quillContentDelta);\r\n      }\r\n    }\r\n  }, [quillContentDelta]);\r\n\r\n  // Function to debounce state updates (useful for frequent input changes)\r\n  const debounce = (func, delay) => {\r\n    let timeout;\r\n    return (...args) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => func.apply(this, args), delay);\r\n    };\r\n  };\r\n\r\n  // Reconstructs Quill delta from editableData for dynamic reflection in Column 1\r\n  const updateQuillContentFromEditableData = useCallback(debounce((data) => {\r\n    const newDelta = [];\r\n    if (data && parsedDataOrder.length > 0) { // Ensure order is maintained\r\n      parsedDataOrder.forEach(key => {\r\n        const value = data[key];\r\n        if (value !== undefined && value !== null) { // Only add if value exists\r\n          let displayValue = value;\r\n          // Attempt to pretty print JSON if it's a stringified object/array\r\n          try {\r\n            const parsed = JSON.parse(value);\r\n            if (typeof parsed === 'object' && parsed !== null) {\r\n              displayValue = JSON.stringify(parsed, null, 2);\r\n            }\r\n          } catch (e) {\r\n            // Not a valid JSON string, use as is\r\n          }\r\n\r\n          newDelta.push({ insert: `${key.replace(/_/g, ' ').toUpperCase()}:\\n`, attributes: { bold: true, size: 'large' } });\r\n          newDelta.push({ insert: `${displayValue}\\n\\n` });\r\n        }\r\n      });\r\n    } else if (data) { // Fallback if no specific order is available, just iterate keys\r\n         Object.entries(data).forEach(([key, value]) => {\r\n            if (value !== undefined && value !== null) {\r\n                let displayValue = value;\r\n                try {\r\n                    const parsed = JSON.parse(value);\r\n                    if (typeof parsed === 'object' && parsed !== null) {\r\n                        displayValue = JSON.stringify(parsed, null, 2);\r\n                    }\r\n                } catch (e) {}\r\n\r\n                newDelta.push({ insert: `${key.replace(/_/g, ' ').toUpperCase()}:\\n`, attributes: { bold: true, size: 'large' } });\r\n                newDelta.push({ insert: `${displayValue}\\n\\n` });\r\n            }\r\n         });\r\n    }\r\n    setQuillContentDelta(newDelta);\r\n  }, 300), [parsedDataOrder, setQuillContentDelta]); // ADDED parsedDataOrder and setQuillContentDelta to dependencies\r\n\r\n  // Effect to update Column 1 when editableData changes\r\n  useEffect(() => {\r\n    updateQuillContentFromEditableData(editableData);\r\n  }, [editableData, updateQuillContentFromEditableData]);\r\n\r\n  // Handle file selection\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n    setError(null);\r\n    setMessage(null);\r\n    setQuillContentDelta([]);\r\n    setExtractedData({});\r\n    setEditableData({});\r\n    setParsedDataOrder([]);\r\n    setRawDocumentText(\"\");\r\n  };\r\n\r\n  // Handle file upload and initial parsing\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      setError('Please select a file first.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setMessage(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.error || 'File upload failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Upload response data:\", data);\r\n\r\n      setQuillContentDelta(data.quill_content_delta || []);\r\n      setExtractedData(data.parsed_data || {});\r\n      setEditableData(data.parsed_data || {}); // Initialize editable with extracted\r\n      setParsedDataOrder(data.parsed_data_order || Object.keys(data.parsed_data || {}));\r\n      setRawDocumentText(data.raw_text_content || \"\");\r\n\r\n      setMessage('File processed and data extracted successfully!');\r\n\r\n    } catch (err) {\r\n      console.error('Upload Error:', err);\r\n      setError(`Error: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle changes in editable fields (Column 3)\r\n  const handleEditableChange = (field, value) => {\r\n    setEditableData(prevData => ({\r\n      ...prevData,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  // Handle saving the document\r\n  const handleSave = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setMessage(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/save', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          edited_data: editableData,\r\n          quill_content_delta: quillContentDelta, // Save the current state of the Quill view\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.error || 'Save failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setMessage(data.message);\r\n    } catch (err) {\r\n      console.error('Save Error:', err);\r\n      setError(`Error: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle exporting to PDF\r\n  const handleExportPdf = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setMessage(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/export', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          quill_content_delta: quillContentDelta, // Export what's shown in Column 1\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.error || 'PDF export failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setMessage(data.message);\r\n      if (data.pdf_download_url) {\r\n        // Trigger client-side download\r\n        window.open(`http://localhost:5000${data.pdf_download_url}`, '_blank');\r\n      }\r\n    } catch (err) {\r\n      console.error('Export PDF Error:', err);\r\n      setError(`Error: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Label Studio Integration functions\r\n  const fetchLabelStudioStatus = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/label-studio-status');\r\n      const data = await response.json();\r\n      setLabelStudioStatus(data);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch Label Studio status:\", err);\r\n      setLabelStudioStatus({ success: false, status: 'unknown_error', message: \"Could not connect to backend for Label Studio status.\" });\r\n    }\r\n  }, []);\r\n\r\n  const fetchLabelStudioProjects = useCallback(async () => {\r\n    if (labelStudioStatus && labelStudioStatus.success) {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/label-studio-projects');\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setLabelStudioProjects(data.projects);\r\n        } else {\r\n          setError(`Failed to get LS projects: ${data.error}`);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch Label Studio projects:\", err);\r\n        setError(\"Failed to fetch Label Studio projects.\");\r\n      }\r\n    }\r\n  }, [labelStudioStatus]);\r\n\r\n  useEffect(() => {\r\n    fetchLabelStudioStatus();\r\n  }, [fetchLabelStudioStatus]);\r\n\r\n  useEffect(() => {\r\n    if (labelStudioStatus?.success) {\r\n      fetchLabelStudioProjects();\r\n    }\r\n  }, [labelStudioStatus, fetchLabelStudioProjects]);\r\n\r\n  const handleExportToLabelStudio = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setMessage(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/export-to-label-studio', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          parsed_data: editableData, // Send the currently editable data\r\n          raw_document_text: rawDocumentText, // Send original raw text for annotation\r\n          project_type: projectTypeForLS,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.error || 'Export to Label Studio failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setMessage(data.message);\r\n      setShowProjectModal(false); // Close modal on success\r\n      fetchLabelStudioProjects(); // Refresh project list\r\n      if (data.label_studio_url) {\r\n        window.open(data.label_studio_url, '_blank');\r\n      }\r\n    } catch (err) {\r\n      console.error('Export to LS Error:', err);\r\n      setError(`Error exporting to Label Studio: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleImportFromLabelStudio = async () => {\r\n    if (!projectIdToImport) {\r\n      setError('Please enter a Project ID to import.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setMessage(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/import-from-label-studio', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ project_id: projectIdToImport }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.error || 'Import from Label Studio failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setMessage(data.message + (data.insights_file ? ` (Insights file: ${data.insights_file})` : ''));\r\n      console.log('Annotated Data:', data.annotated_data);\r\n\r\n      if (data.insights_download_url) {\r\n        window.open(`http://localhost:5000${data.insights_download_url}`, '_blank');\r\n      }\r\n\r\n      // Optionally, you could update `editableData` with imported annotations\r\n      // This would require mapping LS annotations back to your structured data format.\r\n      // For now, we just log it.\r\n\r\n    } catch (err) {\r\n      console.error('Import from LS Error:', err);\r\n      setError(`Error importing from Label Studio: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-4 font-sans text-gray-800\">\r\n      <h1 className=\"text-4xl font-bold text-center text-blue-700 mb-8 drop-shadow-md\">\r\n        Document Editor with AI-Powered Extraction 📄✨\r\n      </h1>\r\n\r\n      <div className=\"max-w-7xl mx-auto bg-white rounded-xl shadow-lg p-6 mb-8\">\r\n        <div className=\"flex flex-col md:flex-row items-center justify-center gap-4 mb-6\">\r\n          <input\r\n            type=\"file\"\r\n            onChange={handleFileChange}\r\n            className=\"block w-full text-sm text-gray-500\r\n              file:mr-4 file:py-2 file:px-4\r\n              file:rounded-full file:border-0\r\n              file:text-sm file:font-semibold\r\n              file:bg-blue-50 file:text-blue-700\r\n              hover:file:bg-blue-100 cursor-pointer\"\r\n          />\r\n          <button\r\n            onClick={handleUpload}\r\n            disabled={!selectedFile || loading}\r\n            className=\"w-full md:w-auto px-6 py-3 bg-blue-600 text-white rounded-lg\r\n                       hover:bg-blue-700 transition-colors duration-200\r\n                       disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\"\r\n          >\r\n            {loading ? 'Processing...' : 'Upload & Extract'}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col md:flex-row items-center justify-center gap-4\">\r\n          <button\r\n            onClick={handleSave}\r\n            disabled={loading || Object.keys(editableData).length === 0}\r\n            className=\"w-full md:w-auto px-6 py-3 bg-green-600 text-white rounded-lg\r\n                       hover:bg-green-700 transition-colors duration-200\r\n                       disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\"\r\n          >\r\n            Save Document\r\n          </button>\r\n          <button\r\n            onClick={handleExportPdf}\r\n            disabled={loading || quillContentDelta.length === 0}\r\n            className=\"w-full md:w-auto px-6 py-3 bg-purple-600 text-white rounded-lg\r\n                       hover:bg-purple-700 transition-colors duration-200\r\n                       disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\"\r\n          >\r\n            Export to PDF\r\n          </button>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"mt-4 p-3 bg-red-100 text-red-700 border border-red-300 rounded-md\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        {message && (\r\n          <div className=\"mt-4 p-3 bg-green-100 text-green-700 border border-green-300 rounded-md\">\r\n            {message}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-7xl mx-auto\">\r\n        {/* Column 1: Live Input View Panel (Read-only Quill) */}\r\n        <div className=\"bg-white p-6 rounded-xl shadow-lg flex flex-col\">\r\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Live Document View</h2>\r\n          <div className=\"flex-grow\">\r\n            <div ref={quillViewerRef} className=\"ql-viewer\">\r\n              {/* Quill will render content here */}\r\n              {quillContentDelta.length === 0 && (\r\n                <p className=\"text-gray-500 text-center py-10\">Upload a document (PDF, DOCX, TXT) to see its live view here. Edits in the third column will dynamically reflect here.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Column 2: AI Extracted Fields (Read-only) */}\r\n        <div className=\"bg-white p-6 rounded-xl shadow-lg flex flex-col\">\r\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">AI-Extracted Details</h2>\r\n          <div className=\"flex-grow space-y-4 overflow-y-auto max-h-[80vh] p-2 -m-2\">\r\n            {parsedDataOrder.length === 0 ? (\r\n              <p className=\"text-gray-500 text-center py-10\">Extracted details will appear here after document upload and processing.</p>\r\n            ) : (\r\n              parsedDataOrder.map(key => (\r\n                extractedData[key] !== undefined && extractedData[key] !== null ? (\r\n                  <div key={key} className=\"p-3 bg-gray-50 rounded-md border border-gray-200\">\r\n                    <h3 className=\"text-sm font-bold text-blue-600 mb-1\">{key.replace(/_/g, ' ').toUpperCase()}:</h3>\r\n                    <p className=\"text-gray-700 text-sm break-words whitespace-pre-wrap\">{\r\n                        typeof extractedData[key] === 'object' && extractedData[key] !== null\r\n                        ? JSON.stringify(extractedData[key], null, 2)\r\n                        : String(extractedData[key])\r\n                    }</p>\r\n                  </div>\r\n                ) : null // Don't render if value is null or undefined\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Column 3: Editable Fields */}\r\n        <div className=\"bg-white p-6 rounded-xl shadow-lg flex flex-col\">\r\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Edit Extracted Details</h2>\r\n          <div className=\"flex-grow space-y-4 overflow-y-auto max-h-[80vh] p-2 -m-2\">\r\n            {parsedDataOrder.length === 0 ? (\r\n              <p className=\"text-gray-500 text-center py-10\">Edit fields will appear here after AI extraction. Changes will reflect dynamically in the \"Live View\".</p>\r\n            ) : (\r\n              parsedDataOrder.map(key => (\r\n                <div key={key}>\r\n                  <label htmlFor={`edit-${key}`} className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    {key.replace(/_/g, ' ').toUpperCase()}:\r\n                  </label>\r\n                  <textarea\r\n                    id={`edit-${key}`}\r\n                    value={editableData[key] || ''}\r\n                    onChange={(e) => handleEditableChange(key, e.target.value)}\r\n                    rows={Math.min(5, (String(editableData[key] || '')).split('\\n').length + 1)}\r\n                    className=\"editable-field\"\r\n                  />\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Label Studio Integration Section */}\r\n      <div className=\"max-w-7xl mx-auto bg-white rounded-xl shadow-lg p-6 mt-8\">\r\n        <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Label Studio Integration</h2>\r\n        <p className=\"text-sm text-gray-600 mb-4\">\r\n          Status: {labelStudioStatus ? (\r\n            labelStudioStatus.success ?\r\n              <span className=\"text-green-600 font-medium\">Connected ({labelStudioStatus.total_projects} projects)</span> :\r\n              <span className=\"text-red-600 font-medium\">Disconnected ({labelStudioStatus.status}: {labelStudioStatus.message})</span>\r\n          ) : 'Checking...'}\r\n        </p>\r\n        \r\n        {!labelStudioStatus?.success && labelStudioStatus?.setup_instructions && (\r\n          <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-4\">\r\n            <p className=\"font-semibold text-yellow-800\">Label Studio Setup Required:</p>\r\n            <ul className=\"list-disc list-inside text-yellow-700 text-sm\">\r\n              {labelStudioStatus.setup_instructions.map((inst, idx) => (\r\n                <li key={idx}>{inst}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"flex flex-col md:flex-row gap-4 mb-4\">\r\n          <button\r\n            onClick={() => setShowProjectModal(true)}\r\n            disabled={loading || !labelStudioStatus?.success || Object.keys(editableData).length === 0}\r\n            className=\"w-full md:w-auto px-6 py-3 bg-indigo-600 text-white rounded-lg\r\n                       hover:bg-indigo-700 transition-colors duration-200\r\n                       disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\"\r\n          >\r\n            Export to Label Studio\r\n          </button>\r\n          \r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Project ID to import\"\r\n            value={projectIdToImport}\r\n            onChange={(e) => setProjectIdToImport(e.target.value)}\r\n            className=\"editable-field flex-grow md:flex-grow-0\"\r\n            disabled={!labelStudioStatus?.success}\r\n          />\r\n          <button\r\n            onClick={handleImportFromLabelStudio}\r\n            disabled={loading || !labelStudioStatus?.success || !projectIdToImport}\r\n            className=\"w-full md:w-auto px-6 py-3 bg-indigo-600 text-white rounded-lg\r\n                       hover:bg-indigo-700 transition-colors duration-200\r\n                       disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\"\r\n          >\r\n            Import from Label Studio\r\n          </button>\r\n        </div>\r\n\r\n        {labelStudioProjects.length > 0 && labelStudioStatus?.success && (\r\n          <div className=\"mt-4\">\r\n            <h3 className=\"text-lg font-semibold mb-2\">Your Label Studio Projects:</h3>\r\n            <ul className=\"list-disc list-inside text-gray-700\">\r\n              {labelStudioProjects.map(project => (\r\n                <li key={project.id} className=\"mb-1 text-sm\">\r\n                  <strong>{project.title}</strong> (ID: {project.id}) - Tasks: {project.task_count}, Annotations: {project.annotation_count}\r\n                  <a\r\n                    href={`${labelStudioStatus.url}/projects/${project.id}/data`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"ml-2 text-blue-500 hover:underline\"\r\n                  >\r\n                    View\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Export to Label Studio Modal */}\r\n      {showProjectModal && (\r\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md\">\r\n            <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Export to Label Studio</h2>\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"projectType\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Project Type:\r\n              </label>\r\n              <select\r\n                id=\"projectType\"\r\n                value={projectTypeForLS}\r\n                onChange={(e) => setProjectTypeForLS(e.target.value)}\r\n                className=\"editable-field\"\r\n              >\r\n                <option value=\"generic\">Generic Document Annotation</option>\r\n                <option value=\"resume\">Resume Annotation</option>\r\n                <option value=\"skills\">Skill Extraction</option>\r\n                <option value=\"education\">Education Validation</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"flex justify-end gap-3\">\r\n              <button\r\n                onClick={() => setShowProjectModal(false)}\r\n                className=\"px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400 transition-colors\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleExportToLabelStudio}\r\n                disabled={loading}\r\n                className=\"px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors disabled:opacity-50\"\r\n              >\r\n                {loading ? 'Exporting...' : 'Export'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}