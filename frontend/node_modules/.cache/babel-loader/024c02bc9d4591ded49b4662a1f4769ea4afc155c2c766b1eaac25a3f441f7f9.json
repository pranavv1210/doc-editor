{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pranav\\\\Desktop\\\\document-editor\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport 'quill/dist/quill.snow.css'; // Still needed for basic ql-viewer styles\nimport './index.css'; // Your Tailwind CSS imports are here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const quillViewerRef = useRef(null); // This ref now points to a plain div\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [quillContentDelta, setQuillContentDelta] = useState([]); // Raw Quill delta from original doc\n  const [extractedData, setExtractedData] = useState({}); // Read-only AI-extracted data\n  const [editableData, setEditableData] = useState({}); // Editable AI-extracted data\n  const [parsedDataOrder, setParsedDataOrder] = useState([]); // Order of fields from AI\n  const [message, setMessage] = useState('');\n  const [viewerHtml, setViewerHtml] = useState(''); // State to store generated HTML for the viewer\n\n  // Function to convert Quill Delta to simple HTML\n  const convertDeltaToHtml = useCallback(delta => {\n    let html = '';\n    if (!delta || !Array.isArray(delta)) {\n      return '';\n    }\n    delta.forEach(op => {\n      if (typeof op.insert === 'string') {\n        let text = op.insert;\n        let attributes = op.attributes || {};\n        text = text.replace(/\\n/g, '<br/>');\n        let style = '';\n        let tag = 'span';\n        if (attributes.bold) style += 'font-weight: bold;';\n        if (attributes.italic) style += 'font-style: italic;';\n        if (attributes.size && typeof attributes.size === 'number') style += `font-size: ${attributes.size}px;`;\n        if (attributes.font) style += `font-family: \"${attributes.font}\";`;\n        if (op.insert.includes('\\n') && op.insert.trim() === '') {\n          html += '<br/>';\n          return;\n        } else if (op.insert.includes('\\n')) {\n          tag = 'div';\n        }\n        if (style) {\n          html += `<${tag} style=\"${style}\">${text}</${tag}>`;\n        } else {\n          html += `<${tag}>${text}</${tag}>`;\n        }\n      }\n    });\n    return html;\n  }, []);\n\n  // Effect: Convert quillContentDelta to HTML for the viewer\n  useEffect(() => {\n    setViewerHtml(convertDeltaToHtml(quillContentDelta));\n  }, [quillContentDelta, convertDeltaToHtml]);\n\n  // Function to debounce state updates (useful for frequent input changes)\n  const debounce = (func, delay) => {\n    let timeout;\n    return (...args) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func.apply(this, args), delay);\n    };\n  };\n\n  // Reconstructs Quill delta from editableData for dynamic reflection in Column 1\n  const updateQuillContentLogic = useCallback(debounce(data => {\n    const newDelta = [];\n    if (data && parsedDataOrder.length > 0) {\n      parsedDataOrder.forEach(key => {\n        const value = data[key];\n        if (value !== undefined && value !== null) {\n          let displayValue = value;\n          try {\n            const parsed = JSON.parse(value);\n            if (typeof parsed === 'object' && parsed !== null) {\n              displayValue = JSON.stringify(parsed, null, 2);\n            }\n          } catch (e) {\n            // Not a valid JSON string, use as is\n          }\n          newDelta.push({\n            insert: `${key.replace(/_/g, ' ').toUpperCase()}:\\n`,\n            attributes: {\n              bold: true,\n              size: 'large'\n            }\n          });\n          newDelta.push({\n            insert: `${displayValue}\\n\\n`\n          });\n        }\n      });\n    } else if (data) {\n      Object.entries(data).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          let displayValue = value;\n          try {\n            const parsed = JSON.parse(value);\n            if (typeof parsed === 'object' && parsed !== null) {\n              displayValue = JSON.stringify(parsed, null, 2);\n            }\n          } catch (e) {}\n          newDelta.push({\n            insert: `${key.replace(/_/g, ' ').toUpperCase()}:\\n`,\n            attributes: {\n              bold: true,\n              size: 'large'\n            }\n          });\n          newDelta.push({\n            insert: `${displayValue}\\n\\n`\n          });\n        }\n      });\n    }\n    setQuillContentDelta(newDelta);\n  }, 300), [parsedDataOrder, setQuillContentDelta]);\n\n  // Effect to trigger the debounced update when editableData changes\n  useEffect(() => {\n    updateQuillContentLogic(editableData);\n  }, [editableData, updateQuillContentLogic]);\n\n  // Handle file selection\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setError(null);\n    setMessage(null);\n    setQuillContentDelta([]);\n    setExtractedData({});\n    setEditableData({});\n    setParsedDataOrder([]);\n    setViewerHtml('');\n  };\n\n  // Handle file upload and initial parsing\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a file first.');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    setMessage(null);\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error || 'File upload failed');\n      }\n      const data = await response.json();\n      console.log(\"Upload response data:\", data);\n      setQuillContentDelta(data.quill_content_delta || []);\n      setExtractedData(data.parsed_data || {});\n      setEditableData(data.parsed_data || {});\n      setParsedDataOrder(data.parsed_data_order || Object.keys(data.parsed_data || {}));\n      setMessage('File processed and data extracted successfully!');\n    } catch (err) {\n      console.error('Upload Error:', err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle changes in editable fields (Column 3)\n  const handleEditableChange = (field, value) => {\n    setEditableData(prevData => ({\n      ...prevData,\n      [field]: value\n    }));\n  };\n\n  // Handle saving the document\n  const handleSave = async () => {\n    setLoading(true);\n    setError(null);\n    setMessage(null);\n    try {\n      const response = await fetch('http://localhost:5000/save', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          edited_data: editableData,\n          quill_content_delta: quillContentDelta\n        })\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error || 'Save failed');\n      }\n      const data = await response.json();\n      setMessage(data.message);\n    } catch (err) {\n      console.error('Save Error:', err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle exporting to PDF\n  const handleExportPdf = async () => {\n    setLoading(true);\n    setError(null);\n    setMessage(null);\n    try {\n      const response = await fetch('http://localhost:5000/export', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          quill_content_delta: quillContentDelta\n        })\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error || 'PDF export failed');\n      }\n      const data = await response.json();\n      setMessage(data.message);\n      if (data.pdf_download_url) {\n        window.open(`http://localhost:5000${data.pdf_download_url}`, '_blank');\n      }\n    } catch (err) {\n      console.error('Export PDF Error:', err);\n      setError(`Error: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-4 font-sans text-gray-800\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-center text-blue-700 mb-8 drop-shadow-md\",\n      children: \"Document Editor with AI-Powered Extraction \\uD83D\\uDCC4\\u2728\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto bg-white rounded-xl shadow-lg p-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row items-center justify-center gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          className: \"block w-full text-sm text-gray-500\\r file:mr-4 file:py-2 file:px-4\\r file:rounded-full file:border-0\\r file:text-sm file:font-semibold\\r file:bg-blue-50 file:text-blue-700\\r hover:file:bg-blue-100 cursor-pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          disabled: !selectedFile || loading,\n          className: \"w-full md:w-auto px-6 py-3 bg-blue-600 text-white rounded-lg\\r hover:bg-blue-700 transition-colors duration-200\\r disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\",\n          children: loading ? 'Processing...' : 'Upload & Extract'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col md:flex-row items-center justify-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          disabled: loading || Object.keys(editableData).length === 0,\n          className: \"w-full md:w-auto px-6 py-3 bg-green-600 text-white rounded-lg\\r hover:bg-green-700 transition-colors duration-200\\r disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\",\n          children: \"Save Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExportPdf,\n          disabled: loading || quillContentDelta.length === 0,\n          className: \"w-full md:w-auto px-6 py-3 bg-purple-600 text-white rounded-lg\\r hover:bg-purple-700 transition-colors duration-200\\r disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\",\n          children: \"Export to PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-3 bg-red-100 text-red-700 border border-red-300 rounded-md\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-3 bg-green-100 text-green-700 border border-green-300 rounded-md\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-7xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-xl shadow-lg flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-700\",\n          children: \"Live Document View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            ref: quillViewerRef,\n            className: \"p-4 border border-gray-200 rounded-md bg-gray-50 min-h-[500px] max-h-[80vh] overflow-y-auto\",\n            dangerouslySetInnerHTML: {\n              __html: viewerHtml\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), quillContentDelta.length === 0 && !viewerHtml && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-center py-10 mt-4\",\n            children: \"Upload a document (PDF, DOCX, TXT) to see its live view here. Edits in the third column will dynamically reflect here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-xl shadow-lg flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-700\",\n          children: \"AI-Extracted Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow space-y-4 overflow-y-auto max-h-[80vh] p-2 -m-2\",\n          children: parsedDataOrder.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-center py-10\",\n            children: \"Extracted details will appear here after document upload and processing.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this) : parsedDataOrder.map(key => extractedData[key] !== undefined && extractedData[key] !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-gray-50 rounded-md border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-bold text-blue-600 mb-1\",\n              children: [key.replace(/_/g, ' ').toUpperCase(), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-700 text-sm break-words whitespace-pre-wrap\",\n              children: typeof extractedData[key] === 'object' && extractedData[key] !== null ? JSON.stringify(extractedData[key], null, 2) : String(extractedData[key])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 21\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 19\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-xl shadow-lg flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-gray-700\",\n          children: \"Edit Extracted Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow space-y-4 overflow-y-auto max-h-[80vh] p-2 -m-2\",\n          children: parsedDataOrder.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-center py-10\",\n            children: \"Edit fields will appear here after AI extraction. Changes will reflect dynamically in the \\\"Live View\\\".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this) : parsedDataOrder.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `edit-${key}`,\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: [key.replace(/_/g, ' ').toUpperCase(), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: `edit-${key}`,\n              value: editableData[key] || '',\n              onChange: e => handleEditableChange(key, e.target.value),\n              rows: Math.min(5, String(editableData[key] || '').split('\\n').length + 1),\n              className: \"editable-field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tRiQ1s/WbStWFGTSgpBhsQ4ns0g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","App","_s","quillViewerRef","selectedFile","setSelectedFile","loading","setLoading","error","setError","quillContentDelta","setQuillContentDelta","extractedData","setExtractedData","editableData","setEditableData","parsedDataOrder","setParsedDataOrder","message","setMessage","viewerHtml","setViewerHtml","convertDeltaToHtml","delta","html","Array","isArray","forEach","op","insert","text","attributes","replace","style","tag","bold","italic","size","font","includes","trim","debounce","func","delay","timeout","args","clearTimeout","setTimeout","apply","updateQuillContentLogic","data","newDelta","length","key","value","undefined","displayValue","parsed","JSON","parse","stringify","e","push","toUpperCase","Object","entries","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","ok","errData","json","Error","console","log","quill_content_delta","parsed_data","parsed_data_order","keys","err","handleEditableChange","field","prevData","handleSave","headers","edited_data","handleExportPdf","pdf_download_url","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","ref","dangerouslySetInnerHTML","__html","map","String","htmlFor","id","rows","Math","min","split","_c","$RefreshReg$"],"sources":["C:/Users/Pranav/Desktop/document-editor/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport 'quill/dist/quill.snow.css'; // Still needed for basic ql-viewer styles\r\nimport './index.css'; // Your Tailwind CSS imports are here\r\n\r\nfunction App() {\r\n  const quillViewerRef = useRef(null); // This ref now points to a plain div\r\n\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [quillContentDelta, setQuillContentDelta] = useState([]); // Raw Quill delta from original doc\r\n  const [extractedData, setExtractedData] = useState({}); // Read-only AI-extracted data\r\n  const [editableData, setEditableData] = useState({}); // Editable AI-extracted data\r\n  const [parsedDataOrder, setParsedDataOrder] = useState([]); // Order of fields from AI\r\n  const [message, setMessage] = useState('');\r\n  const [viewerHtml, setViewerHtml] = useState(''); // State to store generated HTML for the viewer\r\n\r\n  // Function to convert Quill Delta to simple HTML\r\n  const convertDeltaToHtml = useCallback((delta) => {\r\n    let html = '';\r\n    if (!delta || !Array.isArray(delta)) {\r\n      return '';\r\n    }\r\n\r\n    delta.forEach(op => {\r\n      if (typeof op.insert === 'string') {\r\n        let text = op.insert;\r\n        let attributes = op.attributes || {};\r\n\r\n        text = text.replace(/\\n/g, '<br/>');\r\n\r\n        let style = '';\r\n        let tag = 'span';\r\n\r\n        if (attributes.bold) style += 'font-weight: bold;';\r\n        if (attributes.italic) style += 'font-style: italic;';\r\n        if (attributes.size && typeof attributes.size === 'number') style += `font-size: ${attributes.size}px;`;\r\n        if (attributes.font) style += `font-family: \"${attributes.font}\";`;\r\n\r\n        if (op.insert.includes('\\n') && op.insert.trim() === '') {\r\n            html += '<br/>'; \r\n            return;\r\n        } else if (op.insert.includes('\\n')) {\r\n            tag = 'div';\r\n        }\r\n\r\n        if (style) {\r\n            html += `<${tag} style=\"${style}\">${text}</${tag}>`;\r\n        } else {\r\n            html += `<${tag}>${text}</${tag}>`;\r\n        }\r\n      }\r\n    });\r\n    return html;\r\n  }, []);\r\n\r\n  // Effect: Convert quillContentDelta to HTML for the viewer\r\n  useEffect(() => {\r\n    setViewerHtml(convertDeltaToHtml(quillContentDelta));\r\n  }, [quillContentDelta, convertDeltaToHtml]);\r\n\r\n\r\n  // Function to debounce state updates (useful for frequent input changes)\r\n  const debounce = (func, delay) => {\r\n    let timeout;\r\n    return (...args) => {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(() => func.apply(this, args), delay);\r\n    };\r\n  };\r\n\r\n  // Reconstructs Quill delta from editableData for dynamic reflection in Column 1\r\n  const updateQuillContentLogic = useCallback(debounce((data) => {\r\n    const newDelta = [];\r\n    if (data && parsedDataOrder.length > 0) {\r\n      parsedDataOrder.forEach(key => {\r\n        const value = data[key];\r\n        if (value !== undefined && value !== null) {\r\n          let displayValue = value;\r\n          try {\r\n            const parsed = JSON.parse(value);\r\n            if (typeof parsed === 'object' && parsed !== null) {\r\n              displayValue = JSON.stringify(parsed, null, 2);\r\n            }\r\n          } catch (e) {\r\n            // Not a valid JSON string, use as is\r\n          }\r\n\r\n          newDelta.push({ insert: `${key.replace(/_/g, ' ').toUpperCase()}:\\n`, attributes: { bold: true, size: 'large' } });\r\n          newDelta.push({ insert: `${displayValue}\\n\\n` });\r\n        }\r\n      });\r\n    } else if (data) {\r\n         Object.entries(data).forEach(([key, value]) => {\r\n            if (value !== undefined && value !== null) {\r\n                let displayValue = value;\r\n                try {\r\n                    const parsed = JSON.parse(value);\r\n                    if (typeof parsed === 'object' && parsed !== null) {\r\n                        displayValue = JSON.stringify(parsed, null, 2);\r\n                    }\r\n                } catch (e) {}\r\n\r\n                newDelta.push({ insert: `${key.replace(/_/g, ' ').toUpperCase()}:\\n`, attributes: { bold: true, size: 'large' } });\r\n                newDelta.push({ insert: `${displayValue}\\n\\n` });\r\n            }\r\n         });\r\n    }\r\n    setQuillContentDelta(newDelta);\r\n  }, 300), [parsedDataOrder, setQuillContentDelta]);\r\n\r\n  // Effect to trigger the debounced update when editableData changes\r\n  useEffect(() => {\r\n    updateQuillContentLogic(editableData);\r\n  }, [editableData, updateQuillContentLogic]);\r\n\r\n\r\n  // Handle file selection\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n    setError(null);\r\n    setMessage(null);\r\n    setQuillContentDelta([]);\r\n    setExtractedData({});\r\n    setEditableData({});\r\n    setParsedDataOrder([]);\r\n    setViewerHtml('');\r\n  };\r\n\r\n  // Handle file upload and initial parsing\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      setError('Please select a file first.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setMessage(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.error || 'File upload failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Upload response data:\", data);\r\n\r\n      setQuillContentDelta(data.quill_content_delta || []);\r\n      setExtractedData(data.parsed_data || {});\r\n      setEditableData(data.parsed_data || {});\r\n      setParsedDataOrder(data.parsed_data_order || Object.keys(data.parsed_data || {}));\r\n\r\n      setMessage('File processed and data extracted successfully!');\r\n\r\n    } catch (err) {\r\n      console.error('Upload Error:', err);\r\n      setError(`Error: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle changes in editable fields (Column 3)\r\n  const handleEditableChange = (field, value) => {\r\n    setEditableData(prevData => ({\r\n      ...prevData,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  // Handle saving the document\r\n  const handleSave = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setMessage(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/save', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          edited_data: editableData,\r\n          quill_content_delta: quillContentDelta,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.error || 'Save failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setMessage(data.message);\r\n    } catch (err) {\r\n      console.error('Save Error:', err);\r\n      setError(`Error: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle exporting to PDF\r\n  const handleExportPdf = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setMessage(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/export', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          quill_content_delta: quillContentDelta,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.error || 'PDF export failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setMessage(data.message);\r\n      if (data.pdf_download_url) {\r\n        window.open(`http://localhost:5000${data.pdf_download_url}`, '_blank');\r\n      }\r\n    } catch (err) {\r\n      console.error('Export PDF Error:', err);\r\n      setError(`Error: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-4 font-sans text-gray-800\">\r\n      <h1 className=\"text-4xl font-bold text-center text-blue-700 mb-8 drop-shadow-md\">\r\n        Document Editor with AI-Powered Extraction 📄✨\r\n      </h1>\r\n\r\n      <div className=\"max-w-7xl mx-auto bg-white rounded-xl shadow-lg p-6 mb-8\">\r\n        <div className=\"flex flex-col md:flex-row items-center justify-center gap-4 mb-6\">\r\n          <input\r\n            type=\"file\"\r\n            onChange={handleFileChange}\r\n            className=\"block w-full text-sm text-gray-500\r\n              file:mr-4 file:py-2 file:px-4\r\n              file:rounded-full file:border-0\r\n              file:text-sm file:font-semibold\r\n              file:bg-blue-50 file:text-blue-700\r\n              hover:file:bg-blue-100 cursor-pointer\"\r\n          />\r\n          <button\r\n            onClick={handleUpload}\r\n            disabled={!selectedFile || loading}\r\n            className=\"w-full md:w-auto px-6 py-3 bg-blue-600 text-white rounded-lg\r\n                       hover:bg-blue-700 transition-colors duration-200\r\n                       disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\"\r\n          >\r\n            {loading ? 'Processing...' : 'Upload & Extract'}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col md:flex-row items-center justify-center gap-4\">\r\n          <button\r\n            onClick={handleSave}\r\n            disabled={loading || Object.keys(editableData).length === 0}\r\n            className=\"w-full md:w-auto px-6 py-3 bg-green-600 text-white rounded-lg\r\n                       hover:bg-green-700 transition-colors duration-200\r\n                       disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\"\r\n          >\r\n            Save Document\r\n          </button>\r\n          <button\r\n            onClick={handleExportPdf}\r\n            disabled={loading || quillContentDelta.length === 0}\r\n            className=\"w-full md:w-auto px-6 py-3 bg-purple-600 text-white rounded-lg\r\n                       hover:bg-purple-700 transition-colors duration-200\r\n                       disabled:opacity-50 disabled:cursor-not-allowed font-medium shadow-md\"\r\n          >\r\n            Export to PDF\r\n          </button>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"mt-4 p-3 bg-red-100 text-red-700 border border-red-300 rounded-md\">\r\n            {error}\r\n          </div>\r\n        )}\r\n        {message && (\r\n          <div className=\"mt-4 p-3 bg-green-100 text-green-700 border border-green-300 rounded-md\">\r\n            {message}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 max-w-7xl mx-auto\">\r\n        {/* Column 1: Live Input View Panel (Plain HTML from Quill Delta) */}\r\n        <div className=\"bg-white p-6 rounded-xl shadow-lg flex flex-col\">\r\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Live Document View</h2>\r\n          <div className=\"flex-grow\">\r\n            <div \r\n              ref={quillViewerRef} \r\n              className=\"p-4 border border-gray-200 rounded-md bg-gray-50 min-h-[500px] max-h-[80vh] overflow-y-auto\" \r\n              dangerouslySetInnerHTML={{ __html: viewerHtml }}\r\n            >\r\n              {/* No children here */}\r\n            </div>\r\n            {quillContentDelta.length === 0 && !viewerHtml && (\r\n                <p className=\"text-gray-500 text-center py-10 mt-4\">Upload a document (PDF, DOCX, TXT) to see its live view here. Edits in the third column will dynamically reflect here.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Column 2: AI Extracted Fields (Read-only) */}\r\n        <div className=\"bg-white p-6 rounded-xl shadow-lg flex flex-col\">\r\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">AI-Extracted Details</h2>\r\n          <div className=\"flex-grow space-y-4 overflow-y-auto max-h-[80vh] p-2 -m-2\">\r\n            {parsedDataOrder.length === 0 ? (\r\n              <p className=\"text-gray-500 text-center py-10\">Extracted details will appear here after document upload and processing.</p>\r\n            ) : (\r\n              parsedDataOrder.map(key => (\r\n                extractedData[key] !== undefined && extractedData[key] !== null ? (\r\n                  <div key={key} className=\"p-3 bg-gray-50 rounded-md border border-gray-200\">\r\n                    <h3 className=\"text-sm font-bold text-blue-600 mb-1\">{key.replace(/_/g, ' ').toUpperCase()}:</h3>\r\n                    <p className=\"text-gray-700 text-sm break-words whitespace-pre-wrap\">{\r\n                        typeof extractedData[key] === 'object' && extractedData[key] !== null\r\n                        ? JSON.stringify(extractedData[key], null, 2)\r\n                        : String(extractedData[key])\r\n                    }</p>\r\n                  </div>\r\n                ) : null\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Column 3: Editable Fields */}\r\n        <div className=\"bg-white p-6 rounded-xl shadow-lg flex flex-col\">\r\n          <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Edit Extracted Details</h2>\r\n          <div className=\"flex-grow space-y-4 overflow-y-auto max-h-[80vh] p-2 -m-2\">\r\n            {parsedDataOrder.length === 0 ? (\r\n              <p className=\"text-gray-500 text-center py-10\">Edit fields will appear here after AI extraction. Changes will reflect dynamically in the \"Live View\".</p>\r\n            ) : (\r\n              parsedDataOrder.map(key => (\r\n                <div key={key}>\r\n                  <label htmlFor={`edit-${key}`} className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    {key.replace(/_/g, ' ').toUpperCase()}:\r\n                  </label>\r\n                  <textarea\r\n                    id={`edit-${key}`}\r\n                    value={editableData[key] || ''}\r\n                    onChange={(e) => handleEditableChange(key, e.target.value)}\r\n                    rows={Math.min(5, (String(editableData[key] || '')).split('\\n').length + 1)}\r\n                    className=\"editable-field\"\r\n                  />\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}